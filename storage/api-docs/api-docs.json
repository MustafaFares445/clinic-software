{
    "openapi": "3.0.0",
    "info": {
        "title": "CLinic Software Api ",
        "description": "API Description",
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "operationId": "d764dd091cc4494ae0baf360b03319f3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful registration",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "accessToken": {
                                            "type": "string"
                                        },
                                        "tokenType": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login a user",
                "operationId": "8dcb70df1020986038d098cc08d05dae",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "default": "doctor-admin"
                                    },
                                    "password": {
                                        "type": "string",
                                        "default": "secret"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "accessToken": {
                                            "type": "string"
                                        },
                                        "tokenType": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout a user",
                "operationId": "69281b12abb272c76871f19cb17ca563",
                "responses": {
                    "200": {
                        "description": "Successful logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transactions/billing": {
            "get": {
                "tags": [
                    "Billing Transactions"
                ],
                "summary": "List all billing transactions",
                "operationId": "d667712155aae0eb30ab8ee4bad6dc36",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by transaction type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Filter by year of transaction",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BillingTransactionResource"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Billing Transactions"
                ],
                "summary": "Create a new billing transaction",
                "operationId": "b95951e31556018a8a3c39bb420ca8f0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateBillingTransactionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Billing transaction created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillingTransactionResource"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transactions/billing/{billingTransaction}": {
            "get": {
                "tags": [
                    "Billing Transactions"
                ],
                "summary": "Get a specific billing transaction",
                "operationId": "1e96d1128d211ab3c70942c3a2745231",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UUID of the billing transaction",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillingTransactionResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Billing transaction not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Billing Transactions"
                ],
                "summary": "Update a billing transaction",
                "operationId": "393e3bc8876fb92ca965f3654a954d5a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UUID of the billing transaction",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBillingTransactionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Billing transaction updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillingTransactionResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Billing transaction not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Billing Transactions"
                ],
                "summary": "Delete a billing transaction",
                "operationId": "505710ad7053dec9bb8d507035984a15",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UUID of the billing transaction",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Billing transaction not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/clinics": {
            "get": {
                "tags": [
                    "Clinics"
                ],
                "summary": "Get current clinic details",
                "operationId": "dab93c930a17b3b823e8febfca5512f4",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClinicResource"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Clinics"
                ],
                "summary": "Update clinic details",
                "operationId": "dd25c7ce5c163cc2083b86f0c008f38c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateClinicRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClinicResource"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Clinics"
                ],
                "summary": "Delete clinic and associated users",
                "operationId": "c26fb56dd9d19552e8f3bc06416f45b6",
                "responses": {
                    "204": {
                        "description": "No content"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/clinics/subscription": {
            "post": {
                "tags": [
                    "Clinics"
                ],
                "summary": "Create a new clinic subscription",
                "operationId": "7163d55f843d9c086cc0882e58c60e53",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClinicSubscriptionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Clinic subscription created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "accessToken": {
                                            "type": "string"
                                        },
                                        "tokenType": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/file-manager": {
            "get": {
                "tags": [
                    "File Manager"
                ],
                "summary": "List all media files",
                "operationId": "a48da48878926362004045b2d65fe108",
                "parameters": [
                    {
                        "name": "collection",
                        "in": "query",
                        "description": "Filter by collection name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of media files",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MediaResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "File Manager"
                ],
                "summary": "Upload new file(s)",
                "operationId": "b11acca88ea9eb88ce40b03a2e8417e7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "Files to upload",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "collection": {
                                        "description": "Collection name for the files",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Files uploaded successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/file-manager/medical-collections": {
            "get": {
                "tags": [
                    "File Manager"
                ],
                "summary": "Get list of medical collections",
                "operationId": "45ced1a6a5ab07ee6a6903a831a02745",
                "responses": {
                    "200": {
                        "description": "List of medical collections",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/file-manager/{media}": {
            "delete": {
                "tags": [
                    "File Manager"
                ],
                "summary": "Delete a media file",
                "operationId": "1c1274a0f56df9930510fd85a09efd6b",
                "parameters": [
                    {
                        "name": "media",
                        "in": "path",
                        "description": "Media ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "File deleted successfully"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/file-manager/{media}/download": {
            "get": {
                "tags": [
                    "File Manager"
                ],
                "summary": "Download a media file",
                "operationId": "5c1df70b69176d625c6a3c04095068d2",
                "parameters": [
                    {
                        "name": "media",
                        "in": "path",
                        "description": "Media ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File download",
                        "headers": {
                            "Content-Type": {
                                "description": "File MIME type",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Content-Disposition": {
                                "description": "File attachment information",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/ills": {
            "get": {
                "tags": [
                    "Ills"
                ],
                "summary": "Get list of ills",
                "description": "Display a listing of the resource.",
                "operationId": "806a28e94812776909ff1675f30b5954",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IllResource"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Ills"
                ],
                "summary": "Create a new ill",
                "description": "Store a newly created resource in storage.",
                "operationId": "52b7e5c0e670d490af9a294e39fd9005",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IllRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Ill created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IllResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/transactions/medical": {
            "get": {
                "tags": [
                    "Medical Transactions"
                ],
                "summary": "List all medical transactions",
                "operationId": "a44e81b88887f2dca1c9db87b9fff158",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MedicalTransactionResource"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Medical Transactions"
                ],
                "summary": "Create a new medical transaction",
                "operationId": "c6ed9c4ba6deccdaca03ef51bfd1d939",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MedicalTransactionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Medical transaction created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicalTransactionResource"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transactions/medical/{medicalTransaction}": {
            "get": {
                "tags": [
                    "Medical Transactions"
                ],
                "summary": "Get a specific medical transaction",
                "operationId": "86416adb83422542ca906b343c09b944",
                "parameters": [
                    {
                        "name": "medicalTransaction",
                        "in": "path",
                        "description": "ID of the medical transaction",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicalTransactionResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Medical transaction not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Medical Transactions"
                ],
                "summary": "Update a medical transaction",
                "operationId": "23e88e2aded77b6623eb8d61fe16415a",
                "parameters": [
                    {
                        "name": "medicalTransaction",
                        "in": "path",
                        "description": "ID of the medical transaction",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MedicalTransactionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Medical transaction updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicalTransactionResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Medical transaction not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Medical Transactions"
                ],
                "summary": "Delete a medical transaction",
                "operationId": "916fa96cf72a1ccfb03e41fa6381d059",
                "parameters": [
                    {
                        "name": "medicalTransaction",
                        "in": "path",
                        "description": "ID of the medical transaction",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Medical transaction not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/medicines": {
            "get": {
                "tags": [
                    "Medicines"
                ],
                "summary": "Get list of medicines",
                "description": "Returns list of all medicines",
                "operationId": "getMedicinesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MedicineResource"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Medicines"
                ],
                "summary": "Create a new medicine",
                "description": "Creates a new medicine with the provided data",
                "operationId": "storeMedicine",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MedicineRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Medicine created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicineResource"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/overview/patients/gender/count": {
            "get": {
                "tags": [
                    "Overview"
                ],
                "summary": "Get patient count by gender",
                "operationId": "a144d2fbb50ed8a6bb24209b695296c1",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "malesCount": {
                                            "type": "integer",
                                            "example": 150
                                        },
                                        "femalesCount": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/overview/ills/count": {
            "get": {
                "tags": [
                    "Overview"
                ],
                "summary": "Get illness statistics",
                "operationId": "54a424ba334f189491df4cccfad78cc6",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "records_count": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "totalCount": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/overview/records/count": {
            "get": {
                "tags": [
                    "Overview"
                ],
                "summary": "Get records count within date range",
                "operationId": "baf31a3535526a6b9d0ad4103bea6536",
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Start date for records count (Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "End date for records count (Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 50
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/overview/general-statistics": {
            "get": {
                "tags": [
                    "Overview"
                ],
                "summary": "Get general statistics",
                "operationId": "e27b17f1b26ef5563cf83369960981ce",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "reservationsCount": {
                                            "type": "integer",
                                            "example": 100
                                        },
                                        "surgeryCount": {
                                            "type": "integer",
                                            "example": 30
                                        },
                                        "appointmentCount": {
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "inspectionCount": {
                                            "type": "integer",
                                            "example": 20
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/overview/top-ills": {
            "get": {
                "tags": [
                    "Overview"
                ],
                "summary": "Get top 5 illnesses",
                "operationId": "849dbe089e1efd0dc34b9e9ff152c492",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "records_count": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/overview/patients/count": {
            "get": {
                "tags": [
                    "Overview"
                ],
                "summary": "Get patients count",
                "operationId": "63968957b88649e967bbb6981cbe3fd6",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "currentMonth": {
                                            "type": "integer",
                                            "example": 50
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/overview/billing-statistics": {
            "get": {
                "tags": [
                    "Overview"
                ],
                "summary": "Get billing statistics",
                "operationId": "6d00ad1df6782265fc8032082ed7e57f",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of transaction (in/out)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "in",
                            "enum": [
                                "in",
                                "out"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "totalTransactions": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 5000.5
                                        },
                                        "totalInMonth": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 1500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/overview/age-statistics": {
            "get": {
                "tags": [
                    "Overview"
                ],
                "summary": "Get patient age statistics",
                "operationId": "975b17e44ce32598e91c04ef676324b2",
                "parameters": [
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Filter by year of records",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "adults": {
                                            "type": "integer",
                                            "example": 300
                                        },
                                        "children": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/overview/chart/billing-statistics": {
            "get": {
                "tags": [
                    "Overview"
                ],
                "summary": "Get billing statistics by month for a given year",
                "operationId": "4e64ac10a5a73e5192d0134e72f490ac",
                "parameters": [
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Year for billing statistics",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": "2025"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of transaction (in/out)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "in",
                            "enum": [
                                "in",
                                "out"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "labels": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Jan"
                                            }
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 1500.5
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/patients": {
            "get": {
                "tags": [
                    "Patients"
                ],
                "summary": "Get a list of patients",
                "operationId": "4a397b69598fdd620ee7120b8610185b",
                "parameters": [
                    {
                        "name": "clinicId",
                        "in": "query",
                        "description": "Filter patients by clinic ID",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "description": "Field to order patients by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "firstName",
                                "lastName",
                                "nextReservation",
                                "lastReservation",
                                "registeredAt"
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "orderType",
                        "in": "query",
                        "description": "Order type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "DESC",
                                "ASC"
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Number of patients per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PatientResource"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You are not allowed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Patients"
                ],
                "summary": "Store a newly created patient",
                "description": "Create a new patient record and return the created patient resource",
                "operationId": "d81c0f99b503153ba6d47c7899a882a4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatientRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatientResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/patients/{patient}": {
            "get": {
                "tags": [
                    "Patients"
                ],
                "summary": "Get a specific patient",
                "description": "Returns a specific patient resource with related data",
                "operationId": "getPatientById",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "path",
                        "description": "ID of the patient to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "clinicId",
                        "in": "query",
                        "description": "Filter reservations by clinic ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatientResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Patients"
                ],
                "summary": "Update a patient",
                "operationId": "18504a6046ba0359d94ad6749b840931",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "path",
                        "description": "ID of the patient to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatientRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patient updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatientResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Patients"
                ],
                "summary": "Delete a patient",
                "operationId": "1c9bebd2827e52b62fb5467aaea126ca",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "path",
                        "description": "ID of the patient to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Patient deleted successfully"
                    },
                    "404": {
                        "description": "Patient not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/patients/{patient}/records": {
            "get": {
                "tags": [
                    "Patients"
                ],
                "summary": "Get patient medical records",
                "description": "Retrieves all medical records for a specific patient with filtering options",
                "operationId": "getPatientRecords",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "path",
                        "description": "Patient ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Start date for filtering records (Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "End date for filtering records (Y-m-d), must be after or equal to startDate",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term to filter records by content",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RecordResource"
                                            }
                                        },
                                        "links": {
                                            "description": "Pagination links",
                                            "type": "object"
                                        },
                                        "meta": {
                                            "description": "Pagination metadata",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/patients/{patient}/reservations": {
            "get": {
                "tags": [
                    "Patients"
                ],
                "summary": "Get patient reservations",
                "description": "Retrieves all reservations for a specific patient with filtering and sorting options",
                "operationId": "getPatientReservations",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "path",
                        "description": "Patient ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Start date for filtering reservations (Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "End date for filtering reservations (Y-m-d), must be after or equal to startDate",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "doctorsIds[]",
                        "in": "query",
                        "description": "Array of doctor IDs to filter by",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term to filter by patient name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "start",
                            "enum": [
                                "start",
                                "firstName",
                                "lastName"
                            ]
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ReservationResource"
                                            }
                                        },
                                        "links": {
                                            "description": "Pagination links",
                                            "type": "object"
                                        },
                                        "meta": {
                                            "description": "Pagination metadata",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/patients/{patient}/reservations/count": {
            "get": {
                "tags": [
                    "Patients"
                ],
                "summary": "Get patient reservations count",
                "description": "Get the count of past and upcoming reservations for a specific patient",
                "operationId": "patientReservationsCount",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "path",
                        "description": "Patient ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "clinicId",
                        "in": "query",
                        "description": "Clinic ID to filter reservations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "pastReservationCount": {
                                            "description": "Number of past reservations",
                                            "type": "integer"
                                        },
                                        "upComingReservationsCount": {
                                            "description": "Number of upcoming reservations",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/patients/{patient}/profile-image": {
            "post": {
                "tags": [
                    "Patients"
                ],
                "summary": "Upload patient profile image",
                "description": "Upload and associate a profile image with a patient",
                "operationId": "addProfileImage",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "path",
                        "description": "Patient ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "description": "Profile image file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile image uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MediaResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Patients"
                ],
                "summary": "Delete patient profile image",
                "description": "Remove the profile image associated with a patient",
                "operationId": "deleteProfileImage",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "path",
                        "description": "Patient ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Profile image deleted successfully"
                    },
                    "404": {
                        "description": "Profile image not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/patients/{patient}/files": {
            "get": {
                "tags": [
                    "Patients"
                ],
                "summary": "get patient files",
                "operationId": "8fa95c8438c1363b8f25ea700463c162",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "path",
                        "description": "Patient ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "collection",
                        "in": "query",
                        "description": "Filter by media collection",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Files retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MediaResource"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/patients/{patient}/file": {
            "post": {
                "tags": [
                    "Patients"
                ],
                "summary": "Upload new file",
                "operationId": "ccf1077c17cf7a9087df118ca058dc19",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "path",
                        "description": "Patient ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "Files to upload",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "collection": {
                                        "description": "Collection name for the files",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Files uploaded successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/records": {
            "post": {
                "tags": [
                    "Records"
                ],
                "summary": "Create a new medical record",
                "operationId": "b1cb58080b97f1cc484352515a66d98b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateRecordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Record created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecordResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/records/{record}": {
            "get": {
                "tags": [
                    "Records"
                ],
                "summary": "Get a specific medical record",
                "operationId": "47225c01ff19852c8677a75817dfba23",
                "parameters": [
                    {
                        "name": "record",
                        "in": "path",
                        "description": "Record UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecordResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Record not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Records"
                ],
                "summary": "Update an existing medical record",
                "operationId": "655d1da6268656aec3196b2a415ff766",
                "parameters": [
                    {
                        "name": "record",
                        "in": "path",
                        "description": "Record UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateRecordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Record updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecordResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Record not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Records"
                ],
                "summary": "Soft delete a medical record",
                "operationId": "c64288c2e8dee1b0c0e537d8e11422cc",
                "parameters": [
                    {
                        "name": "record",
                        "in": "path",
                        "description": "Record UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecordResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Record not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/records/{record}/restore": {
            "post": {
                "tags": [
                    "Records"
                ],
                "summary": "Restore a soft-deleted medical record",
                "operationId": "17ef4b59be4d8a2a9458c829bccfa33f",
                "parameters": [
                    {
                        "name": "record",
                        "in": "path",
                        "description": "Record UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record restored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecordResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Record not found"
                    }
                }
            }
        },
        "/api/records/{record}/files": {
            "post": {
                "tags": [
                    "Records"
                ],
                "summary": "Add files to a medical record",
                "operationId": "5da6b9125d4f542226bd9784249435ad",
                "parameters": [
                    {
                        "name": "record",
                        "in": "path",
                        "description": "Record UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MediaRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Media added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MediaResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/records/{record}/files/{file}": {
            "delete": {
                "tags": [
                    "Records"
                ],
                "summary": "Delete media from a medical record",
                "description": "Removes a specific media file associated with a medical record. Only media belonging to the specified record can be deleted.",
                "operationId": "c5bcb10a2a05fbbdd9ef5d87540c06da",
                "parameters": [
                    {
                        "name": "record",
                        "in": "path",
                        "description": "Record UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "media",
                        "in": "path",
                        "description": "Media ID to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Media deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MediaResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Media does not belong to this record",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "not Allowed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Record or Media not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservations": {
            "post": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Store a newly created reservation",
                "operationId": "01e3d21dc330a31de025203bc142ffa3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReservationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Resource created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationResource"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservations/{reservation}": {
            "get": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Display the specified reservation",
                "operationId": "2aefc564f94e483fb93920c2935eeafe",
                "parameters": [
                    {
                        "name": "reservation",
                        "in": "path",
                        "description": "Reservation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationResource"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Update the specified reservation",
                "operationId": "459cb3958996a0266b294be06a643db0",
                "parameters": [
                    {
                        "name": "reservation",
                        "in": "path",
                        "description": "Reservation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReservationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationResource"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Remove the specified reservation",
                "operationId": "9cb75e88bfb3a102881ea262dde33019",
                "parameters": [
                    {
                        "name": "reservation",
                        "in": "path",
                        "description": "Reservation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Reservation not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AuthRequest": {
                "title": "Auth Request",
                "description": "Authentication request parameters",
                "properties": {
                    "fullName": {
                        "description": "Get the validation rules that apply to the request.",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 2,
                        "example": "Mustafa Fares"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255,
                        "example": "john.doe@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "maxLength": 255,
                        "minLength": 8,
                        "example": "secretpass123"
                    },
                    "username": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 3,
                        "example": "johndoe"
                    }
                },
                "type": "object"
            },
            "ClinicSubscriptionRequest": {
                "required": [
                    "firstName",
                    "lastName",
                    "email",
                    "password",
                    "username",
                    "clinicName",
                    "clinicAddress",
                    "clinicType",
                    "workingDays"
                ],
                "properties": {
                    "firstName": {
                        "description": "The first name of the user",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 2,
                        "example": "Mustafa"
                    },
                    "lastName": {
                        "description": "The last name of the user",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 2,
                        "example": "Fares"
                    },
                    "email": {
                        "description": "Email address of the user (must be unique)",
                        "type": "string",
                        "format": "email",
                        "maxLength": 255,
                        "example": "john.doe@example.com"
                    },
                    "password": {
                        "description": "Password for the user account",
                        "type": "string",
                        "format": "password",
                        "maxLength": 255,
                        "minLength": 8,
                        "example": "password123"
                    },
                    "username": {
                        "description": "Username for the user account (must be unique, allows letters, numbers, dashes and underscores)",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 3,
                        "example": "johndoe"
                    },
                    "clinicName": {
                        "description": "Name of the clinic",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 2,
                        "example": "Health Clinic"
                    },
                    "clinicAddress": {
                        "description": "Address of the clinic",
                        "type": "string",
                        "maxLength": 500,
                        "example": "123 Main St"
                    },
                    "clinicLongitude": {
                        "description": "Longitude of the clinic location",
                        "type": "number",
                        "format": "float",
                        "maximum": 180,
                        "minimum": -180,
                        "example": "40.7128",
                        "nullable": true
                    },
                    "clinicLatitude": {
                        "description": "Latitude of the clinic location",
                        "type": "number",
                        "format": "float",
                        "maximum": 90,
                        "minimum": -90,
                        "example": "-74.0060",
                        "nullable": true
                    },
                    "clinicStartTime": {
                        "description": "Clinic opening time in 24-hour format (HH:MM)",
                        "type": "string",
                        "format": "time",
                        "example": "09:00",
                        "nullable": true
                    },
                    "clinicEndTime": {
                        "description": "Clinic closing time in 24-hour format (HH:MM)",
                        "type": "string",
                        "format": "time",
                        "example": "17:00",
                        "nullable": true
                    },
                    "clinicDescription": {
                        "description": "Description of the clinic",
                        "type": "string",
                        "maxLength": 1000,
                        "example": "A modern healthcare facility",
                        "nullable": true
                    },
                    "clinicType": {
                        "description": "Type of the clinic",
                        "type": "string",
                        "enum": [
                            "hospital",
                            "clinic",
                            "health_center"
                        ]
                    },
                    "numberOfDoctors": {
                        "description": "Number of doctors in the clinic",
                        "type": "integer",
                        "minimum": 0,
                        "example": 5,
                        "nullable": true
                    },
                    "numberOfSecretariat": {
                        "description": "Number of secretariat staff in the clinic",
                        "type": "integer",
                        "minimum": 0,
                        "example": 2,
                        "nullable": true
                    },
                    "workingDays": {
                        "description": "Clinic working days schedule",
                        "type": "array",
                        "items": {
                            "required": [
                                "day",
                                "start",
                                "end"
                            ],
                            "properties": {
                                "day": {
                                    "description": "Day of week",
                                    "type": "string",
                                    "enum": [
                                        "mon",
                                        "tue",
                                        "wed",
                                        "thu",
                                        "fri",
                                        "sat",
                                        "sun"
                                    ],
                                    "example": "mon"
                                },
                                "start": {
                                    "description": "Opening time in 24-hour format (HH:MM)",
                                    "type": "string",
                                    "format": "time",
                                    "example": "09:00"
                                },
                                "end": {
                                    "description": "Closing time in 24-hour format (HH:MM)",
                                    "type": "string",
                                    "format": "time",
                                    "example": "17:00"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "planId": {
                        "description": "Subscription plan ID",
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "CreateBillingTransactionRequest": {
                "required": [
                    "type",
                    "amount"
                ],
                "properties": {
                    "clinicId": {
                        "description": "UUID of the clinic associated with the transaction",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type of the transaction (e.g., in, out)",
                        "type": "string"
                    },
                    "amount": {
                        "description": "Transaction amount",
                        "type": "number",
                        "format": "float"
                    },
                    "description": {
                        "description": "Optional description of the transaction",
                        "type": "string",
                        "nullable": true
                    },
                    "modelId": {
                        "description": "ID of the related model (medical transaction or reservation)",
                        "type": "string"
                    },
                    "modelType": {
                        "description": "Type of the related model",
                        "type": "string",
                        "enum": [
                            "medicalTransaction",
                            "reservation"
                        ]
                    }
                },
                "type": "object"
            },
            "CreateRecordRequest": {
                "title": "Record Request",
                "description": "Record request body for creating or updating records",
                "required": [
                    "patientId",
                    "type"
                ],
                "properties": {
                    "patientId": {
                        "description": "The ID of the patient",
                        "type": "string",
                        "example": "pat_123456789"
                    },
                    "clinicId": {
                        "description": "The ID of the clinic",
                        "type": "string",
                        "example": "cln_123456789",
                        "nullable": true
                    },
                    "reservationId": {
                        "description": "The ID of the reservation",
                        "type": "string",
                        "example": "res_123456789",
                        "nullable": true
                    },
                    "type": {
                        "description": "Type of the record",
                        "type": "string",
                        "enum": [
                            "surgery",
                            "appointment",
                            "inspection"
                        ]
                    },
                    "notes": {
                        "description": "notes of records",
                        "type": "string",
                        "example": "notes example",
                        "nullable": true
                    },
                    "price": {
                        "description": "Price of the service",
                        "type": "integer",
                        "example": 1000,
                        "nullable": true
                    },
                    "doctorsIds": {
                        "description": "Array of doctor IDs",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "doc_123456789"
                        },
                        "nullable": true
                    },
                    "medicines": {
                        "description": "Array of medicines",
                        "type": "array",
                        "items": {
                            "required": [
                                "id",
                                "type"
                            ],
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "med_123456789"
                                },
                                "notes": {
                                    "type": "string",
                                    "example": "Take after meals",
                                    "nullable": true
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "prescription",
                                        "recommendation"
                                    ]
                                }
                            },
                            "type": "object"
                        },
                        "nullable": true
                    },
                    "ills": {
                        "description": "Array of illnesses",
                        "type": "array",
                        "items": {
                            "required": [
                                "id",
                                "type"
                            ],
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "ill_123456789"
                                },
                                "notes": {
                                    "type": "string",
                                    "example": "Chronic condition",
                                    "nullable": true
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "diagnosis",
                                        "symptom"
                                    ]
                                }
                            },
                            "type": "object"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "IllRequest": {
                "description": "Request for Ill resource",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "Name of the ill",
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "description": "Description of the ill",
                        "type": "string",
                        "nullable": true
                    },
                    "specifications": {
                        "description": "Array of specification IDs",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "MediaRequest": {
                "title": "Media Upload Request",
                "description": "Request validation rules for medical media uploads",
                "required": [
                    "upload",
                    "collection"
                ],
                "properties": {
                    "upload": {
                        "description": "Medical file to upload. Supported formats: jpeg, png, jpg, gif, mp3, wav, ogg, mp4, mov, avi, wmv, dicom, dcm, nii, nii.gz, pdf, doc, docx, xlsx, csv, xml, json. Max size: 50MB",
                        "type": "string",
                        "format": "binary",
                        "example": "example.jpg"
                    },
                    "collection": {
                        "description": "Type of medical media collection",
                        "type": "string",
                        "enum": [
                            "x-ray",
                            "tests",
                            "mri-scans",
                            "ct-scans",
                            "ultrasound",
                            "lab-reports",
                            "medical-reports",
                            "patient-history",
                            "prescriptions",
                            "ecg-records"
                        ],
                        "example": "x-ray"
                    }
                },
                "type": "object"
            },
            "MedicalTransactionRequest": {
                "required": [
                    "transaction_date",
                    "amount",
                    "status"
                ],
                "properties": {
                    "clinicId": {
                        "description": "ID of the clinic",
                        "type": "integer",
                        "example": 1
                    },
                    "transaction_date": {
                        "description": "Date of the transaction",
                        "type": "string",
                        "format": "date",
                        "example": "2023-01-01"
                    },
                    "amount": {
                        "description": "Transaction amount",
                        "type": "number",
                        "format": "float",
                        "example": 100.5
                    },
                    "notes": {
                        "description": "Additional notes",
                        "type": "string",
                        "maxLength": 500,
                        "example": "Sample notes"
                    },
                    "status": {
                        "description": "Transaction status",
                        "type": "string",
                        "enum": [
                            "pending",
                            "completed",
                            "cancelled"
                        ],
                        "example": "pending"
                    }
                },
                "type": "object"
            },
            "MedicineRequest": {
                "title": "Medicine Request",
                "description": "Medicine creation/update request",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "Name of the medicine",
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "description": "Description of the medicine",
                        "type": "string",
                        "nullable": true
                    },
                    "specifications": {
                        "description": "Array of specification IDs",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "PatientIndexRequest": {
                "title": "Patient Index Request",
                "description": "Request parameters for indexing patients",
                "properties": {
                    "clinicId": {
                        "description": "The ID of the clinic. Must exist in the clinics table.",
                        "type": "string",
                        "nullable": true
                    },
                    "orderBy": {
                        "description": "The field to order by. Allowed values: firstName, lastName, nextReservation, lastReservation, registeredAt.",
                        "type": "string",
                        "enum": [
                            "firstName",
                            "lastName",
                            "nextReservation",
                            "lastReservation",
                            "registeredAt"
                        ],
                        "nullable": true
                    },
                    "orderType": {
                        "description": "The order type. Allowed values: DESC, ASC.",
                        "type": "string",
                        "enum": [
                            "DESC",
                            "ASC"
                        ],
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PatientRecordsRequest": {
                "title": "Patient Records Request",
                "description": "Request parameters for filtering patient records",
                "properties": {
                    "startDate": {
                        "description": "Start date for filtering records",
                        "type": "string",
                        "format": "date",
                        "example": "2023-01-01"
                    },
                    "endDate": {
                        "description": "End date for filtering records",
                        "type": "string",
                        "format": "date",
                        "example": "2023-12-31"
                    },
                    "search": {
                        "description": "Search term for filtering records",
                        "type": "string",
                        "example": "John Doe"
                    }
                },
                "type": "object"
            },
            "PatientRequest": {
                "title": "Patient Request",
                "description": "Request body data for creating or updating a patient",
                "required": [
                    "firstName",
                    "lastName"
                ],
                "properties": {
                    "firstName": {
                        "description": "The first name of the patient",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "The last name of the patient",
                        "type": "string"
                    },
                    "phone": {
                        "description": "The phone number of the patient",
                        "type": "string",
                        "nullable": true
                    },
                    "age": {
                        "description": "The age of the patient",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "fatherName": {
                        "description": "The father's name of the patient",
                        "type": "string",
                        "nullable": true
                    },
                    "motherName": {
                        "description": "The mother's name of the patient",
                        "type": "string",
                        "nullable": true
                    },
                    "nationalNumber": {
                        "description": "The national number of the patient",
                        "type": "string",
                        "nullable": true
                    },
                    "address": {
                        "description": "The address of the patient",
                        "type": "string",
                        "nullable": true
                    },
                    "notes": {
                        "description": "Additional notes about the patient",
                        "type": "string",
                        "nullable": true
                    },
                    "birth": {
                        "description": "The birth date of the patient",
                        "type": "string",
                        "nullable": true
                    },
                    "gender": {
                        "description": "The gender of the patient",
                        "type": "string",
                        "enum": [
                            "male",
                            "female"
                        ],
                        "nullable": true
                    },
                    "clinicId": {
                        "description": "The ID of the clinic the patient belongs to",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PatientReservationRequest": {
                "title": "Patient Reservation Request",
                "description": "Request parameters for filtering patient reservations",
                "properties": {
                    "startDate": {
                        "description": "Start date for filtering (Y-m-d)",
                        "type": "string",
                        "format": "date",
                        "example": "2023-01-01"
                    },
                    "endDate": {
                        "description": "End date for filtering (Y-m-d), must be after or equal to startDate",
                        "type": "string",
                        "format": "date",
                        "example": "2023-12-31"
                    },
                    "doctorsIds": {
                        "description": "Array of doctor IDs to filter by",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "search": {
                        "description": "Search term for patient name",
                        "type": "string",
                        "example": "John"
                    },
                    "sortBy": {
                        "description": "Field to sort by",
                        "type": "string",
                        "enum": [
                            "start",
                            "firstName",
                            "lastName"
                        ]
                    },
                    "sortOrder": {
                        "description": "Sort order",
                        "type": "string",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    },
                    "type": {
                        "description": "Type of reservation",
                        "type": "string",
                        "enum": [
                            "consultation",
                            "follow_up",
                            "procedure"
                        ],
                        "example": "consultation"
                    }
                },
                "type": "object"
            },
            "ReservationRequest": {
                "properties": {
                    "start": {
                        "description": "Reservation start time",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-12-12T02:30:00Z"
                    },
                    "end": {
                        "description": "Reservation end time",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-12-12T03:30:00Z"
                    },
                    "patientId": {
                        "description": "Patient UUID",
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "type": {
                        "description": "Reservation type",
                        "type": "string",
                        "enum": [
                            "surgery",
                            "appointment",
                            "inspection"
                        ],
                        "example": "surgery"
                    },
                    "status": {
                        "description": "Reservation status",
                        "type": "string",
                        "default": "income",
                        "enum": [
                            "income",
                            "check",
                            "dismiss",
                            "cancelled"
                        ],
                        "example": "income"
                    },
                    "doctorId": {
                        "description": "Doctor UUID",
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440001"
                    },
                    "specificationId": {
                        "description": "Specification UUID",
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440002"
                    },
                    "clinicId": {
                        "description": "Clinic UUID",
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440003"
                    }
                },
                "type": "object"
            },
            "UpdateBillingTransactionRequest": {
                "properties": {
                    "clinicId": {
                        "description": "UUID of the clinic associated with the transaction",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type of the transaction (e.g., in, out)",
                        "type": "string"
                    },
                    "amount": {
                        "description": "Transaction amount",
                        "type": "number",
                        "format": "float"
                    },
                    "description": {
                        "description": "Optional description of the transaction",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "UpdateClinicRequest": {
                "properties": {
                    "name": {
                        "description": "Name of the clinic",
                        "type": "string",
                        "example": "City Clinic"
                    },
                    "address": {
                        "description": "Physical address of the clinic",
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "longitude": {
                        "description": "Geographical longitude",
                        "type": "number",
                        "format": "float",
                        "example": 12.345678
                    },
                    "latitude": {
                        "description": "Geographical latitude",
                        "type": "number",
                        "format": "float",
                        "example": 98.765432
                    },
                    "description": {
                        "description": "Optional description of the clinic",
                        "type": "string",
                        "example": "A modern healthcare facility",
                        "nullable": true
                    },
                    "is_banned": {
                        "description": "Indicates if the clinic is banned",
                        "type": "boolean",
                        "default": false
                    },
                    "type": {
                        "description": "Type of clinic",
                        "type": "string",
                        "enum": [
                            "general",
                            "specialized"
                        ],
                        "example": "general"
                    },
                    "startTime": {
                        "description": "Opening time",
                        "type": "string",
                        "format": "time",
                        "example": "08:00",
                        "nullable": true
                    },
                    "endTime": {
                        "description": "Closing time",
                        "type": "string",
                        "format": "time",
                        "example": "18:00",
                        "nullable": true
                    },
                    "numberOfDoctors": {
                        "description": "Number of doctors in the clinic",
                        "type": "integer",
                        "example": 5,
                        "nullable": true
                    },
                    "numberOfSecretariat": {
                        "description": "Number of secretariat staff in the clinic",
                        "type": "integer",
                        "example": 3,
                        "nullable": true
                    },
                    "workingDays": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "day": {
                                    "description": "Day of week (0=Sunday, 6=Saturday)",
                                    "type": "integer",
                                    "example": 1
                                },
                                "start": {
                                    "description": "Opening time for this day",
                                    "type": "string",
                                    "format": "time",
                                    "example": "08:00"
                                },
                                "end": {
                                    "description": "Closing time for this day",
                                    "type": "string",
                                    "format": "time",
                                    "example": "18:00"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "UpdateRecordRequest": {
                "title": "Update Record Request",
                "description": "Record request body for updating records",
                "properties": {
                    "patientId": {
                        "description": "ID of the patient",
                        "type": "string",
                        "example": "pat_123456789"
                    },
                    "clinicId": {
                        "description": "ID of the clinic",
                        "type": "string",
                        "example": "cli_123456789",
                        "nullable": true
                    },
                    "reservationId": {
                        "description": "ID of the reservation",
                        "type": "string",
                        "example": "res_123456789",
                        "nullable": true
                    },
                    "notes": {
                        "description": "notes of records",
                        "type": "string",
                        "example": "notes example",
                        "nullable": true
                    },
                    "type": {
                        "description": "Type of the record",
                        "type": "string",
                        "enum": [
                            "consultation",
                            "examination",
                            "treatment"
                        ]
                    },
                    "price": {
                        "description": "Price of the record",
                        "type": "integer",
                        "example": 5000,
                        "nullable": true
                    },
                    "doctorsIds": {
                        "description": "Array of doctor IDs",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "doc_123456789"
                        },
                        "nullable": true
                    },
                    "medicines": {
                        "description": "Array of medicines",
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "med_123456789"
                                },
                                "notes": {
                                    "type": "string",
                                    "example": "Take after meals",
                                    "nullable": true
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "diagnosis",
                                        "transient"
                                    ]
                                }
                            },
                            "type": "object"
                        },
                        "nullable": true
                    },
                    "ills": {
                        "description": "Array of illnesses",
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "ill_123456789"
                                },
                                "notes": {
                                    "type": "string",
                                    "example": "Chronic condition",
                                    "nullable": true
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "diagnosis",
                                        "transient"
                                    ]
                                }
                            },
                            "type": "object"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "BillingTransactionResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "type": {
                        "type": "string",
                        "example": "payment"
                    },
                    "amount": {
                        "type": "number",
                        "format": "float",
                        "example": 100.5
                    },
                    "description": {
                        "type": "string",
                        "example": "Monthly subscription"
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 123
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01 12:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01 12:00:00"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01 12:00:00",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ClinicResource": {
                "title": "Clinic Resource",
                "description": "Clinic resource representation",
                "properties": {
                    "name": {
                        "description": "Name of the clinic",
                        "type": "string"
                    },
                    "address": {
                        "description": "Address of the clinic",
                        "type": "string"
                    },
                    "longitude": {
                        "description": "Longitude coordinate of the clinic",
                        "type": "number",
                        "format": "float"
                    },
                    "latitude": {
                        "description": "Latitude coordinate of the clinic",
                        "type": "number",
                        "format": "float"
                    },
                    "description": {
                        "description": "Description of the clinic",
                        "type": "string"
                    },
                    "isBanned": {
                        "description": "Indicates if the clinic is banned",
                        "type": "boolean"
                    },
                    "type": {
                        "description": "Type of the clinic",
                        "type": "string"
                    },
                    "workingDays": {
                        "description": "Working days and hours of the clinic",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ClinicWorkingDayResource"
                        }
                    }
                },
                "type": "object"
            },
            "ClinicWorkingDayResource": {
                "title": "Clinic Working Day Resource",
                "description": "Clinic working day resource",
                "properties": {
                    "id": {
                        "description": "The working day ID",
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "day": {
                        "description": "The day of the week",
                        "type": "string",
                        "example": "Monday",
                        "nullable": true
                    },
                    "start": {
                        "description": "Start time of working hours",
                        "type": "string",
                        "example": "09:00",
                        "nullable": true
                    },
                    "end": {
                        "description": "End time of working hours",
                        "type": "string",
                        "example": "17:00",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "DoctorResource": {
                "title": "Doctor Resource",
                "description": "Doctor resource representation",
                "properties": {
                    "string": {
                        "description": "The unique identifier of the doctor",
                        "type": "string"
                    },
                    "fullName": {
                        "description": "The full name of the doctor",
                        "type": "string"
                    },
                    "avatar": {
                        "$ref": "#/components/schemas/MediaResource"
                    }
                },
                "type": "object"
            },
            "IllResource": {
                "title": "Ill Resource",
                "description": "Ill resource representation",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the ill",
                        "type": "string",
                        "example": "1245654"
                    },
                    "name": {
                        "description": "Name of the ill",
                        "type": "string",
                        "example": "ill-name"
                    },
                    "description": {
                        "description": "Description of the ill",
                        "type": "string",
                        "example": "This is a sample ill description."
                    },
                    "specifications": {
                        "description": "List of specifications associated with the ill",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SpecificationResource"
                        }
                    },
                    "image": {
                        "$ref": "#/components/schemas/MediaResource"
                    }
                },
                "type": "object"
            },
            "MediaResource": {
                "title": "MediaResource",
                "description": "Media resource representation for files and images",
                "required": [
                    "id",
                    "name",
                    "fileName",
                    "collection",
                    "url",
                    "size",
                    "type",
                    "extension",
                    "caption"
                ],
                "properties": {
                    "id": {
                        "description": "Unique identifier for the media",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "Name of the media file without extension",
                        "type": "string",
                        "example": "nature_photo"
                    },
                    "fileName": {
                        "description": "Complete file name with extension",
                        "type": "string",
                        "example": "nature_photo.jpg"
                    },
                    "collection": {
                        "description": "Collection name where the media is stored",
                        "type": "string",
                        "example": "photos"
                    },
                    "url": {
                        "description": "Full URL to access the media file",
                        "type": "string",
                        "format": "uri",
                        "example": "https://example.com/storage/media/nature_photo.jpg"
                    },
                    "size": {
                        "description": "Human-readable file size",
                        "type": "string",
                        "example": "2.5 MB"
                    },
                    "type": {
                        "description": "Type of media",
                        "type": "string",
                        "enum": [
                            "image",
                            "video",
                            "document",
                            "audio",
                            "other"
                        ],
                        "example": "image"
                    },
                    "extension": {
                        "description": "File extension",
                        "type": "string",
                        "example": "jpg"
                    },
                    "caption": {
                        "description": "Caption or description of the media. Falls back to name if not set",
                        "type": "string",
                        "example": "Beautiful nature photograph"
                    },
                    "width": {
                        "description": "Width of the image in pixels (only for images)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1920,
                        "nullable": true
                    },
                    "height": {
                        "description": "Height of the image in pixels (only for images)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1080,
                        "nullable": true
                    },
                    "thumbnailUrl": {
                        "description": "URL of the thumbnail version. Only present if 'thumb' conversion exists",
                        "type": "string",
                        "format": "uri",
                        "example": "https://example.com/storage/media/conversions/nature_photo-thumb.jpg",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "MedicalTransactionResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "quantity": {
                        "type": "integer",
                        "example": 5
                    },
                    "type": {
                        "type": "string",
                        "example": "medication"
                    },
                    "patient_id": {
                        "type": "integer",
                        "example": 123
                    },
                    "clinic_id": {
                        "type": "integer",
                        "example": 456
                    },
                    "description": {
                        "type": "string",
                        "example": "Prescription for pain relief"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01 12:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01 12:00:00"
                    },
                    "doctor": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/UserResource"
                            }
                        ],
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "MedicineResource": {
                "title": "Medicine Resource",
                "description": "Medicine resource representation",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the medicine",
                        "type": "string",
                        "example": "12343"
                    },
                    "name": {
                        "description": "name of the medicine",
                        "type": "string",
                        "example": "cetamol"
                    },
                    "description": {
                        "description": "description of the medicine",
                        "type": "string",
                        "example": "This is a sample medicine description."
                    },
                    "specifications": {
                        "description": "List of specification associated with the medicine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SpecificationResource"
                        }
                    },
                    "image": {
                        "$ref": "#/components/schemas/MediaResource"
                    }
                },
                "type": "object"
            },
            "PatientResource": {
                "title": "PatientResource",
                "description": "Patient resource representation",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the patient",
                        "type": "integer",
                        "example": 1
                    },
                    "firstName": {
                        "description": "First name of the patient",
                        "type": "string",
                        "example": "John"
                    },
                    "lastName": {
                        "description": "Last name of the patient",
                        "type": "string",
                        "example": "Doe"
                    },
                    "avatar": {
                        "$ref": "#/components/schemas/MediaResource"
                    },
                    "age": {
                        "description": "Age of the patient",
                        "type": "integer",
                        "example": 30
                    },
                    "fatherName": {
                        "description": "Father's name of the patient",
                        "type": "string",
                        "example": "Robert"
                    },
                    "motherName": {
                        "description": "Mother's name of the patient",
                        "type": "string",
                        "example": "Jane"
                    },
                    "birth": {
                        "description": "Birth date of the patient",
                        "type": "string",
                        "format": "date",
                        "example": "1993-05-15"
                    },
                    "phone": {
                        "description": "Phone number of the patient",
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "gender": {
                        "description": "Gender of the patient",
                        "type": "string",
                        "enum": [
                            "male",
                            "female"
                        ],
                        "example": "male"
                    },
                    "notes": {
                        "description": "Additional notes about the patient",
                        "type": "string",
                        "example": "Patient has allergies"
                    },
                    "nationalNumber": {
                        "description": "National identification number of the patient",
                        "type": "string",
                        "example": "123456789"
                    },
                    "address": {
                        "description": "Address of the patient",
                        "type": "string",
                        "example": "123 Main St, Anytown, USA"
                    },
                    "createdAt": {
                        "description": "Creation timestamp of the patient record",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-12T07:20:50.52Z"
                    },
                    "nextReservation": {
                        "description": "Next reservation date for the patient",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-11-15T10:00:00.00Z"
                    },
                    "lastReservation": {
                        "description": "Last reservation date for the patient",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-09-10T14:30:00.00Z"
                    },
                    "permanentIlls": {
                        "description": "List of permanent illnesses associated with the patient",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IllResource"
                        }
                    },
                    "permanentMedicines": {
                        "description": "List of permanent medicines associated with the patient",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MedicineResource"
                        }
                    },
                    "media": {
                        "description": "List of media files associated with the patient (excluding avatar)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MediaResource"
                        }
                    }
                },
                "type": "object"
            },
            "RecordResource": {
                "title": "Record Resource",
                "description": "Record resource representation",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the record",
                        "type": "integer",
                        "example": 1
                    },
                    "description": {
                        "description": "Description of the record",
                        "type": "string",
                        "example": "This is a sample record description."
                    },
                    "type": {
                        "description": "Type of the record",
                        "type": "string",
                        "example": "Medical"
                    },
                    "dateTime": {
                        "description": "Date and time of the record",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-01T12:34:56Z"
                    },
                    "notes": {
                        "description": "Additional notes for the record",
                        "type": "string",
                        "example": "Patient showed improvement"
                    },
                    "reservation": {
                        "$ref": "#/components/schemas/ReservationResource"
                    },
                    "doctors": {
                        "description": "List of doctors associated with the record",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DoctorResource"
                        }
                    },
                    "ills": {
                        "description": "List of diagnosed illnesses associated with the record",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IllResource"
                        }
                    },
                    "transientIlls": {
                        "description": "List of transient illnesses associated with the record",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IllResource"
                        }
                    },
                    "medicines": {
                        "description": "List of prescribed medicines associated with the record",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MedicineResource"
                        }
                    },
                    "transientMedicines": {
                        "description": "List of transient medicines associated with the record",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MedicineResource"
                        }
                    },
                    "media": {
                        "description": "List of media files associated with the record",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MediaResource"
                        }
                    },
                    "patient": {
                        "$ref": "#/components/schemas/PatientResource"
                    }
                },
                "type": "object"
            },
            "ReservationResource": {
                "title": "Reservation Resource",
                "description": "Reservation resource representation",
                "properties": {
                    "id": {
                        "description": "Reservation ID",
                        "type": "string"
                    },
                    "start": {
                        "description": "Start date and time of the reservation",
                        "type": "string",
                        "format": "date-time"
                    },
                    "end": {
                        "description": "End date and time of the reservation",
                        "type": "string",
                        "format": "date-time"
                    },
                    "type": {
                        "description": "Type of the reservation",
                        "type": "string"
                    },
                    "status": {
                        "description": "Status of the reservation",
                        "type": "string"
                    },
                    "patient": {
                        "$ref": "#/components/schemas/PatientResource"
                    },
                    "doctor": {
                        "$ref": "#/components/schemas/DoctorResource"
                    },
                    "specification": {
                        "$ref": "#/components/schemas/SpecificationResource"
                    },
                    "createdAt": {
                        "description": "Creation timestamp of the reservation",
                        "type": "string",
                        "format": "date-time"
                    },
                    "pastReservationsCount": {
                        "description": "Count of past reservations",
                        "type": "integer"
                    },
                    "upComingReservationCount": {
                        "description": "Count of upcoming reservations",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SpecificationResource": {
                "title": "SpecificationResource",
                "description": "Specification resource representation",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the specification",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Name of the specification",
                        "type": "string",
                        "example": "Specification Name"
                    },
                    "description": {
                        "description": "Description of the specification",
                        "type": "string",
                        "example": "This is a detailed description of the specification."
                    },
                    "image": {
                        "$ref": "#/components/schemas/MediaResource"
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "title": "UserResource",
                "description": "User resource representation",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the user",
                        "type": "string",
                        "example": 1232132432
                    },
                    "firstName": {
                        "description": "First name of the user",
                        "type": "string",
                        "example": "John"
                    },
                    "lastName": {
                        "description": "Last name of the user",
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "description": "Email address of the user",
                        "type": "string",
                        "example": "john.doe@example.com"
                    },
                    "username": {
                        "description": "Username of the user",
                        "type": "string",
                        "example": "john"
                    },
                    "avatar": {
                        "$ref": "#/components/schemas/MediaResource"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "422": {
                "description": "Validation error",
                "content": {
                    "application/json": {
                        "schema": {},
                        "examples": {
                            "file_size": {
                                "summary": "File size exceeds limit",
                                "value": {
                                    "message": "The file must not exceed 50MB"
                                }
                            },
                            "file_type": {
                                "summary": "Invalid file type",
                                "value": {
                                    "message": "The file must be one of these types: jpeg, png, jpg, gif, mp3, wav, ogg, mp4, mov, avi, wmv, dicom, dcm, nii, nii.gz, pdf, doc, docx, xlsx, csv, xml, json"
                                }
                            },
                            "collection": {
                                "summary": "Invalid collection type",
                                "value": {
                                    "message": "The collection must be one of: x-ray, tests, mri-scans, ct-scans, ultrasound, lab-reports, medical-reports, patient-history, prescriptions, ecg-records"
                                }
                            }
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Authentication endpoints"
        },
        {
            "name": "Billing Transactions",
            "description": "Operations related to billing transactions"
        },
        {
            "name": "Clinics",
            "description": "Operations related to Clinics"
        },
        {
            "name": "File Manager",
            "description": "API Endpoints for file management operations"
        },
        {
            "name": "Ills",
            "description": "API Endpoints for managing Ills"
        },
        {
            "name": "Medical Transactions",
            "description": "Operations related to medical transactions"
        },
        {
            "name": "Medicines",
            "description": "Operations related to Medicines"
        },
        {
            "name": "Overview",
            "description": "API Endpoints for dashboard overview statistics"
        },
        {
            "name": "Patients",
            "description": "Operations related to Patients"
        },
        {
            "name": "Records",
            "description": "API Endpoints for managing medical records"
        },
        {
            "name": "Reservation",
            "description": "Operations related to reservations"
        }
    ]
}