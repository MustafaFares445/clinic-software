{
    "openapi": "3.0.0",
    "info": {
        "title": "CLinic Software Api ",
        "description": "API Description",
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "operationId": "d764dd091cc4494ae0baf360b03319f3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful registration",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "accessToken": {
                                            "type": "string"
                                        },
                                        "tokenType": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login a user",
                "operationId": "8dcb70df1020986038d098cc08d05dae",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "default": "doctor-admin"
                                    },
                                    "password": {
                                        "type": "string",
                                        "default": "secret"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "accessToken": {
                                            "type": "string"
                                        },
                                        "tokenType": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout a user",
                "operationId": "69281b12abb272c76871f19cb17ca563",
                "responses": {
                    "200": {
                        "description": "Successful logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/file-manager": {
            "get": {
                "tags": [
                    "File Manager"
                ],
                "summary": "List all media files",
                "operationId": "a48da48878926362004045b2d65fe108",
                "parameters": [
                    {
                        "name": "collection",
                        "in": "query",
                        "description": "Filter by collection name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of media files",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MediaResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "File Manager"
                ],
                "summary": "Upload new file(s)",
                "operationId": "b11acca88ea9eb88ce40b03a2e8417e7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "Files to upload",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "collection": {
                                        "description": "Collection name for the files",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Files uploaded successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/file-manager/medical-collections": {
            "get": {
                "tags": [
                    "File Manager"
                ],
                "summary": "Get list of medical collections",
                "operationId": "45ced1a6a5ab07ee6a6903a831a02745",
                "responses": {
                    "200": {
                        "description": "List of medical collections",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/file-manager/{media}": {
            "delete": {
                "tags": [
                    "File Manager"
                ],
                "summary": "Delete a media file",
                "operationId": "5d76f7bc53669bac2295a0221aa40717",
                "parameters": [
                    {
                        "name": "media",
                        "in": "path",
                        "description": "Media ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "File deleted successfully"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/file-manager/{media}/download": {
            "get": {
                "tags": [
                    "File Manager"
                ],
                "summary": "Download a media file",
                "operationId": "5c1df70b69176d625c6a3c04095068d2",
                "parameters": [
                    {
                        "name": "media",
                        "in": "path",
                        "description": "Media ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File download",
                        "headers": {
                            "Content-Type": {
                                "description": "File MIME type",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Content-Disposition": {
                                "description": "File attachment information",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/overview/patients/gender/count": {
            "get": {
                "tags": [
                    "Overview"
                ],
                "summary": "Get patient count by gender",
                "operationId": "a144d2fbb50ed8a6bb24209b695296c1",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "malesCount": {
                                            "type": "integer",
                                            "example": 150
                                        },
                                        "femalesCount": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/overview/ills/count": {
            "get": {
                "tags": [
                    "Overview"
                ],
                "summary": "Get illness statistics",
                "operationId": "54a424ba334f189491df4cccfad78cc6",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "records_count": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "totalCount": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/overview/records/count": {
            "get": {
                "tags": [
                    "Overview"
                ],
                "summary": "Get records count within date range",
                "operationId": "baf31a3535526a6b9d0ad4103bea6536",
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Start date for records count (Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "End date for records count (Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 50
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/patients": {
            "get": {
                "tags": [
                    "Patients"
                ],
                "summary": "Get a list of patients",
                "operationId": "4a397b69598fdd620ee7120b8610185b",
                "parameters": [
                    {
                        "name": "clinicId",
                        "in": "query",
                        "description": "Filter patients by clinic ID",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "description": "Field to order patients by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "firstName",
                                "lastName",
                                "nextReservation",
                                "lastReservation",
                                "registeredAt"
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "orderType",
                        "in": "query",
                        "description": "Order type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "DESC",
                                "ASC"
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Number of patients per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PatientResource"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You are not allowed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Patients"
                ],
                "summary": "Store a newly created patient",
                "description": "Create a new patient record and return the created patient resource",
                "operationId": "d81c0f99b503153ba6d47c7899a882a4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatientRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatientResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/patients/{patient}": {
            "get": {
                "tags": [
                    "Patients"
                ],
                "summary": "Get a specific patient",
                "description": "Returns a specific patient resource with related data",
                "operationId": "getPatientById",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "path",
                        "description": "ID of the patient to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "clinicId",
                        "in": "query",
                        "description": "Filter reservations by clinic ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatientResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Patients"
                ],
                "summary": "Update a patient",
                "operationId": "18504a6046ba0359d94ad6749b840931",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "path",
                        "description": "ID of the patient to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatientRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patient updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatientResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Patients"
                ],
                "summary": "Delete a patient",
                "operationId": "1c9bebd2827e52b62fb5467aaea126ca",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "path",
                        "description": "ID of the patient to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Patient deleted successfully"
                    },
                    "404": {
                        "description": "Patient not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/patients/{patient}/records": {
            "get": {
                "tags": [
                    "Patients"
                ],
                "summary": "Get patient files",
                "description": "Retrieves all files for a specific patient",
                "operationId": "patientFiles",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "path",
                        "description": "Patient ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RecordResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/patients/{patient}/reservations": {
            "get": {
                "tags": [
                    "Patients"
                ],
                "summary": "Get patient reservations",
                "description": "Retrieves all reservations for a specific patient with related media and doctor information",
                "operationId": "patientReservations",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "path",
                        "description": "Patient ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ReservationResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/patients/{patient}/reservations/count": {
            "get": {
                "tags": [
                    "Patients"
                ],
                "summary": "Get patient reservations count",
                "description": "Get the count of past and upcoming reservations for a specific patient",
                "operationId": "patientReservationsCount",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "path",
                        "description": "Patient ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "clinicId",
                        "in": "query",
                        "description": "Clinic ID to filter reservations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "pastReservationCount": {
                                            "description": "Number of past reservations",
                                            "type": "integer"
                                        },
                                        "upComingReservationsCount": {
                                            "description": "Number of upcoming reservations",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/patients/{patient}/profile-image": {
            "post": {
                "tags": [
                    "Patients"
                ],
                "summary": "Upload patient profile image",
                "description": "Upload and associate a profile image with a patient",
                "operationId": "addProfileImage",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "path",
                        "description": "Patient ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "description": "Profile image file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile image uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MediaResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Patients"
                ],
                "summary": "Delete patient profile image",
                "description": "Remove the profile image associated with a patient",
                "operationId": "deleteProfileImage",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "path",
                        "description": "Patient ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Profile image deleted successfully"
                    },
                    "404": {
                        "description": "Profile image not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/patient/{patient}/file": {
            "post": {
                "tags": [
                    "File Manager"
                ],
                "summary": "Upload new file",
                "operationId": "efeb1979fa6c1b98ffa0e7fe9f4c1ef4",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "path",
                        "description": "Patient ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "Files to upload",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "collection": {
                                        "description": "Collection name for the files",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Files uploaded successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/records": {
            "post": {
                "tags": [
                    "Records"
                ],
                "summary": "Create a new medical record",
                "operationId": "b1cb58080b97f1cc484352515a66d98b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "patientId",
                                    "type"
                                ],
                                "properties": {
                                    "patientId": {
                                        "description": "Patient's UUID",
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "clinicId": {
                                        "description": "Clinic's UUID",
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "reservationId": {
                                        "description": "Reservation's UUID",
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "description": {
                                        "description": "Record description",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "Record type",
                                        "type": "string",
                                        "enum": [
                                            "diagnosed",
                                            "transient"
                                        ]
                                    },
                                    "price": {
                                        "description": "Record price",
                                        "type": "integer"
                                    },
                                    "doctorsIds": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "medicines": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "note": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "ills": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "note": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Record created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecordResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/records/{record}": {
            "get": {
                "tags": [
                    "Records"
                ],
                "summary": "Get a specific medical record",
                "operationId": "47225c01ff19852c8677a75817dfba23",
                "parameters": [
                    {
                        "name": "record",
                        "in": "path",
                        "description": "Record UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecordResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Record not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Records"
                ],
                "summary": "Update an existing medical record",
                "operationId": "655d1da6268656aec3196b2a415ff766",
                "parameters": [
                    {
                        "name": "record",
                        "in": "path",
                        "description": "Record UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RecordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Record updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecordResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Record not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Records"
                ],
                "summary": "Soft delete a medical record",
                "operationId": "c64288c2e8dee1b0c0e537d8e11422cc",
                "parameters": [
                    {
                        "name": "record",
                        "in": "path",
                        "description": "Record UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecordResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Record not found"
                    }
                }
            }
        },
        "/api/records/{record}/restore": {
            "post": {
                "tags": [
                    "Records"
                ],
                "summary": "Restore a soft-deleted medical record",
                "operationId": "17ef4b59be4d8a2a9458c829bccfa33f",
                "parameters": [
                    {
                        "name": "record",
                        "in": "path",
                        "description": "Record UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record restored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecordResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Record not found"
                    }
                }
            }
        },
        "/api/records/{record}/media": {
            "post": {
                "tags": [
                    "Records"
                ],
                "summary": "Add media to a medical record",
                "operationId": "196dfbe0851610f467de64eb60d9cf2a",
                "parameters": [
                    {
                        "name": "record",
                        "in": "path",
                        "description": "Record UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "type": "file"
                                    },
                                    "collection": {
                                        "type": "string",
                                        "enum": [
                                            "files",
                                            "images",
                                            "audios",
                                            "videos",
                                            "x-ray",
                                            "tests"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Media added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MediaResource"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/records/{record}/media/{media}": {
            "delete": {
                "tags": [
                    "Records"
                ],
                "summary": "Delete media from a medical record",
                "description": "Removes a specific media file associated with a medical record. Only media belonging to the specified record can be deleted.",
                "operationId": "e6d7904132fbac7e3e899d5941e1705b",
                "parameters": [
                    {
                        "name": "record",
                        "in": "path",
                        "description": "Record UUID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    },
                    {
                        "name": "media",
                        "in": "path",
                        "description": "Media ID to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Media deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MediaResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Media does not belong to this record",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "not Allowed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Record or Media not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservations": {
            "post": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Store a newly created reservation",
                "operationId": "01e3d21dc330a31de025203bc142ffa3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReservationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Resource created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationResource"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservations/{reservation}": {
            "get": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Display the specified reservation",
                "operationId": "2aefc564f94e483fb93920c2935eeafe",
                "parameters": [
                    {
                        "name": "reservation",
                        "in": "path",
                        "description": "Reservation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationResource"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Update the specified reservation",
                "operationId": "459cb3958996a0266b294be06a643db0",
                "parameters": [
                    {
                        "name": "reservation",
                        "in": "path",
                        "description": "Reservation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReservationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationResource"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Remove the specified reservation",
                "operationId": "9cb75e88bfb3a102881ea262dde33019",
                "parameters": [
                    {
                        "name": "reservation",
                        "in": "path",
                        "description": "Reservation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservations/{reservation}/change-status": {
            "patch": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Change the status of the specified reservation",
                "operationId": "7a1c1fa9d7f6f73e232dd55187171795",
                "parameters": [
                    {
                        "name": "reservation",
                        "in": "path",
                        "description": "Reservation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "income",
                                            "check",
                                            "dismiss",
                                            "cancelled"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Status changed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationResource"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AuthRequest": {
                "required": [
                    "firstName",
                    "lastName",
                    "email",
                    "password",
                    "username",
                    "clinicName",
                    "clinicAddress"
                ],
                "properties": {
                    "firstName": {
                        "description": "First name of the user",
                        "type": "string",
                        "example": "John"
                    },
                    "lastName": {
                        "description": "Last name of the user",
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "description": "Email address of the user",
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "password": {
                        "description": "Password for the user account",
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    },
                    "username": {
                        "description": "Username for the user account",
                        "type": "string",
                        "example": "johndoe"
                    },
                    "clinicName": {
                        "description": "Name of the clinic",
                        "type": "string",
                        "example": "Health Clinic"
                    },
                    "clinicAddress": {
                        "description": "Address of the clinic",
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "clinicLongitude": {
                        "description": "Longitude of the clinic location",
                        "type": "string",
                        "example": "40.7128"
                    },
                    "clinicLatitude": {
                        "description": "Latitude of the clinic location",
                        "type": "string",
                        "example": "-74.0060"
                    },
                    "clinicType": {
                        "description": "Type of the clinic",
                        "type": "string",
                        "enum": [
                            "hospital",
                            "clinic",
                            "health center"
                        ]
                    },
                    "planId": {
                        "description": "ID of the plan",
                        "type": "integer",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "MediaRequest": {
                "title": "Media Upload Request",
                "description": "Request validation rules for various types of medical media uploads",
                "properties": {
                    "files": {
                        "description": "General media files (max 10 files, 50MB each)",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "maxItems": 10
                    },
                    "images": {
                        "description": "Image files (jpeg, png, jpg, gif - max 20 files, 5MB each)",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "maxItems": 20
                    },
                    "audios": {
                        "description": "Audio files (mp3, wav, ogg - max 5 files, 10MB each)",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "maxItems": 5
                    },
                    "videos": {
                        "description": "Video files (mp4, mov, avi, wmv - max 3 files, 50MB each)",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "maxItems": 3
                    },
                    "x-ray": {
                        "description": "X-ray files (dicom, dcm, jpeg, png - max 10 files, 20MB each)",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "maxItems": 10
                    },
                    "mri-scans": {
                        "description": "MRI scan files (dicom, dcm, nii, nii.gz - max 15 files, 50MB each)",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "maxItems": 15
                    },
                    "ct-scans": {
                        "description": "CT scan files (dicom, dcm, nii, nii.gz - max 15 files, 50MB each)",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "maxItems": 15
                    },
                    "ultrasound": {
                        "description": "Ultrasound files (dicom, dcm, mp4, avi - max 10 files, 30MB each)",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "maxItems": 10
                    },
                    "tests": {
                        "description": "Test documents (pdf, doc, docx - max 15 files, 5MB each)",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "maxItems": 15
                    },
                    "lab-reports": {
                        "description": "Lab reports (pdf, doc, docx, xlsx, csv - max 20 files, 10MB each)",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "maxItems": 20
                    },
                    "prescriptions": {
                        "description": "Prescriptions (pdf, jpg, png - max 10 files, 2MB each)",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "maxItems": 10
                    },
                    "medical-reports": {
                        "description": "Medical reports (pdf, doc, docx - max 20 files, 15MB each)",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "maxItems": 20
                    },
                    "patient-history": {
                        "description": "Patient history files (pdf, doc, docx - max 5 files, 20MB each)",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "maxItems": 5
                    },
                    "ecg-records": {
                        "description": "ECG records (pdf, dcm, xml, json - max 10 files, 10MB each)",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "maxItems": 10
                    }
                },
                "type": "object"
            },
            "PatientIndexRequest": {
                "title": "Patient Index Request",
                "description": "Request parameters for indexing patients",
                "properties": {
                    "clinicId": {
                        "description": "The ID of the clinic. Must exist in the clinics table.",
                        "type": "string",
                        "nullable": true
                    },
                    "orderBy": {
                        "description": "The field to order by. Allowed values: firstName, lastName, nextReservation, lastReservation, registeredAt.",
                        "type": "string",
                        "enum": [
                            "firstName",
                            "lastName",
                            "nextReservation",
                            "lastReservation",
                            "registeredAt"
                        ],
                        "nullable": true
                    },
                    "orderType": {
                        "description": "The order type. Allowed values: DESC, ASC.",
                        "type": "string",
                        "enum": [
                            "DESC",
                            "ASC"
                        ],
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PatientRequest": {
                "title": "Patient Request",
                "description": "Request body data for creating or updating a patient",
                "required": [
                    "firstName",
                    "lastName"
                ],
                "properties": {
                    "firstName": {
                        "description": "The first name of the patient",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "The last name of the patient",
                        "type": "string"
                    },
                    "phone": {
                        "description": "The phone number of the patient",
                        "type": "string",
                        "nullable": true
                    },
                    "age": {
                        "description": "The age of the patient",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "fatherName": {
                        "description": "The father's name of the patient",
                        "type": "string",
                        "nullable": true
                    },
                    "motherName": {
                        "description": "The mother's name of the patient",
                        "type": "string",
                        "nullable": true
                    },
                    "nationalNumber": {
                        "description": "The national number of the patient",
                        "type": "string",
                        "nullable": true
                    },
                    "address": {
                        "description": "The address of the patient",
                        "type": "string",
                        "nullable": true
                    },
                    "notes": {
                        "description": "Additional notes about the patient",
                        "type": "string",
                        "nullable": true
                    },
                    "birth": {
                        "description": "The birth date of the patient",
                        "type": "string",
                        "nullable": true
                    },
                    "gender": {
                        "description": "The gender of the patient",
                        "type": "string",
                        "enum": [
                            "male",
                            "female"
                        ],
                        "nullable": true
                    },
                    "clinicId": {
                        "description": "The ID of the clinic the patient belongs to",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "RecordRequest": {
                "title": "Record Request",
                "description": "Record request body for creating or updating records",
                "properties": {
                    "patientId": {
                        "description": "The ID of the patient",
                        "type": "string",
                        "example": "pat_123456789"
                    },
                    "clinicId": {
                        "description": "The ID of the clinic",
                        "type": "string",
                        "example": "cln_123456789",
                        "nullable": true
                    },
                    "reservationId": {
                        "description": "The ID of the reservation",
                        "type": "string",
                        "example": "res_123456789",
                        "nullable": true
                    },
                    "description": {
                        "description": "Description of the record",
                        "type": "string",
                        "example": "Patient visited for regular checkup",
                        "nullable": true
                    },
                    "type": {
                        "description": "Type of the record",
                        "type": "string",
                        "enum": [
                            "surgery",
                            "appointment",
                            "inspection"
                        ]
                    },
                    "price": {
                        "description": "Price of the service",
                        "type": "integer",
                        "example": 1000,
                        "nullable": true
                    },
                    "doctorsIds": {
                        "description": "Array of doctor IDs",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "doc_123456789"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ReservationRequest": {
                "required": [
                    "start",
                    "end",
                    "patientId",
                    "type"
                ],
                "properties": {
                    "start": {
                        "description": "Reservation start time",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-12-12T02:30:00Z"
                    },
                    "end": {
                        "description": "Reservation end time",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-12-12T03:30:00Z"
                    },
                    "patientId": {
                        "description": "Patient ID",
                        "type": "string",
                        "example": 1
                    },
                    "type": {
                        "description": "Reservation type",
                        "type": "string",
                        "enum": [
                            "surgery",
                            "appointment",
                            "inspection"
                        ],
                        "example": "appointment"
                    },
                    "status": {
                        "description": "Reservation status",
                        "type": "string",
                        "default": "income",
                        "enum": [
                            "income",
                            "check",
                            "dismiss",
                            "cancelled"
                        ],
                        "example": "income"
                    },
                    "doctorId": {
                        "description": "Doctor ID",
                        "type": "string",
                        "example": 2
                    },
                    "specificationId": {
                        "description": "Doctor ID",
                        "type": "string",
                        "example": 2
                    }
                },
                "type": "object"
            },
            "DoctorResource": {
                "title": "Doctor Resource",
                "description": "Doctor resource representation",
                "properties": {
                    "string": {
                        "description": "The unique identifier of the doctor",
                        "type": "string"
                    },
                    "fullName": {
                        "description": "The full name of the doctor",
                        "type": "string"
                    },
                    "avatar": {
                        "$ref": "#/components/schemas/MediaResource"
                    }
                },
                "type": "object"
            },
            "IllResource": {
                "title": "Ill Resource",
                "description": "Ill resource representation",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the ill",
                        "type": "string",
                        "example": "1245654"
                    },
                    "name": {
                        "description": "Name of the ill",
                        "type": "string",
                        "example": "ill-name"
                    },
                    "description": {
                        "description": "Description of the ill",
                        "type": "string",
                        "example": "This is a sample ill description."
                    },
                    "specifications": {
                        "description": "List of specifications associated with the ill",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SpecificationResource"
                        }
                    },
                    "image": {
                        "$ref": "#/components/schemas/MediaResource"
                    }
                },
                "type": "object"
            },
            "MediaResource": {
                "title": "MediaResource",
                "description": "Media resource representation for files and images",
                "required": [
                    "id",
                    "name",
                    "fileName",
                    "collection",
                    "url",
                    "size",
                    "type",
                    "extension",
                    "caption"
                ],
                "properties": {
                    "id": {
                        "description": "Unique identifier for the media",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "Name of the media file without extension",
                        "type": "string",
                        "example": "nature_photo"
                    },
                    "fileName": {
                        "description": "Complete file name with extension",
                        "type": "string",
                        "example": "nature_photo.jpg"
                    },
                    "collection": {
                        "description": "Collection name where the media is stored",
                        "type": "string",
                        "example": "photos"
                    },
                    "url": {
                        "description": "Full URL to access the media file",
                        "type": "string",
                        "format": "uri",
                        "example": "https://example.com/storage/media/nature_photo.jpg"
                    },
                    "size": {
                        "description": "Human-readable file size",
                        "type": "string",
                        "example": "2.5 MB"
                    },
                    "type": {
                        "description": "Type of media",
                        "type": "string",
                        "enum": [
                            "image",
                            "video",
                            "document",
                            "audio",
                            "other"
                        ],
                        "example": "image"
                    },
                    "extension": {
                        "description": "File extension",
                        "type": "string",
                        "example": "jpg"
                    },
                    "caption": {
                        "description": "Caption or description of the media. Falls back to name if not set",
                        "type": "string",
                        "example": "Beautiful nature photograph"
                    },
                    "width": {
                        "description": "Width of the image in pixels (only for images)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1920,
                        "nullable": true
                    },
                    "height": {
                        "description": "Height of the image in pixels (only for images)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1080,
                        "nullable": true
                    },
                    "thumbnailUrl": {
                        "description": "URL of the thumbnail version. Only present if 'thumb' conversion exists",
                        "type": "string",
                        "format": "uri",
                        "example": "https://example.com/storage/media/conversions/nature_photo-thumb.jpg",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "MedicineResource": {
                "title": "Medicine Resource",
                "description": "Medicine resource representation",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the medicine",
                        "type": "string",
                        "example": "12343"
                    },
                    "name": {
                        "description": "name of the medicine",
                        "type": "string",
                        "example": "cetamol"
                    },
                    "description": {
                        "description": "description of the medicine",
                        "type": "string",
                        "example": "This is a sample medicine description."
                    },
                    "specifications": {
                        "description": "List of specification associated with the medicine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SpecificationResource"
                        }
                    },
                    "image": {
                        "$ref": "#/components/schemas/MediaResource"
                    }
                },
                "type": "object"
            },
            "PatientResource": {
                "title": "PatientResource",
                "description": "Patient resource representation",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the patient",
                        "type": "integer",
                        "example": 1
                    },
                    "firstName": {
                        "description": "First name of the patient",
                        "type": "string",
                        "example": "John"
                    },
                    "lastName": {
                        "description": "Last name of the patient",
                        "type": "string",
                        "example": "Doe"
                    },
                    "avatar": {
                        "$ref": "#/components/schemas/MediaResource"
                    },
                    "age": {
                        "description": "Age of the patient",
                        "type": "integer",
                        "example": 30
                    },
                    "fatherName": {
                        "description": "Father's name of the patient",
                        "type": "string",
                        "example": "Robert"
                    },
                    "motherName": {
                        "description": "Mother's name of the patient",
                        "type": "string",
                        "example": "Jane"
                    },
                    "birth": {
                        "description": "Birth date of the patient",
                        "type": "string",
                        "format": "date",
                        "example": "1993-05-15"
                    },
                    "phone": {
                        "description": "Phone number of the patient",
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "gender": {
                        "description": "Gender of the patient",
                        "type": "string",
                        "enum": [
                            "male",
                            "female"
                        ],
                        "example": "male"
                    },
                    "notes": {
                        "description": "Additional notes about the patient",
                        "type": "string",
                        "example": "Patient has allergies"
                    },
                    "nationalNumber": {
                        "description": "National identification number of the patient",
                        "type": "string",
                        "example": "123456789"
                    },
                    "address": {
                        "description": "Address of the patient",
                        "type": "string",
                        "example": "123 Main St, Anytown, USA"
                    },
                    "createdAt": {
                        "description": "Creation timestamp of the patient record",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-12T07:20:50.52Z"
                    },
                    "nextReservation": {
                        "description": "Next reservation date for the patient",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-11-15T10:00:00.00Z"
                    },
                    "lastReservation": {
                        "description": "Last reservation date for the patient",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-09-10T14:30:00.00Z"
                    },
                    "permanentIlls": {
                        "description": "List of permanent illnesses associated with the patient",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IllResource"
                        }
                    },
                    "permanentMedicines": {
                        "description": "List of permanent medicines associated with the patient",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MedicineResource"
                        }
                    },
                    "media": {
                        "description": "List of media files associated with the patient (excluding avatar)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MediaResource"
                        }
                    }
                },
                "type": "object"
            },
            "RecordResource": {
                "title": "Record Resource",
                "description": "Record resource representation",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the record",
                        "type": "integer",
                        "example": 1
                    },
                    "description": {
                        "description": "Description of the record",
                        "type": "string",
                        "example": "This is a sample record description."
                    },
                    "type": {
                        "description": "Type of the record",
                        "type": "string",
                        "example": "Medical"
                    },
                    "date": {
                        "description": "Date of the record",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-01T12:34:56Z"
                    },
                    "reservation": {
                        "$ref": "#/components/schemas/ReservationResource"
                    },
                    "doctors": {
                        "description": "List of doctors associated with the record",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DoctorResource"
                        }
                    },
                    "ills": {
                        "description": "List of illnesses associated with the record",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IllResource"
                        }
                    },
                    "transientIlls": {
                        "description": "List of transient illnesses associated with the record",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IllResource"
                        }
                    },
                    "medicines": {
                        "description": "List of medicines associated with the record",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MedicineResource"
                        }
                    },
                    "transientMedicines": {
                        "description": "List of transient medicines associated with the record",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MedicineResource"
                        }
                    },
                    "media": {
                        "description": "List of media files associated with the record",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MediaResource"
                        }
                    }
                },
                "type": "object"
            },
            "ReservationResource": {
                "title": "Reservation Resource",
                "description": "Reservation resource representation",
                "properties": {
                    "id": {
                        "description": "Reservation ID",
                        "type": "string"
                    },
                    "start": {
                        "description": "Start date and time of the reservation",
                        "type": "string",
                        "format": "date-time"
                    },
                    "end": {
                        "description": "End date and time of the reservation",
                        "type": "string",
                        "format": "date-time"
                    },
                    "type": {
                        "description": "Type of the reservation",
                        "type": "string"
                    },
                    "status": {
                        "description": "Status of the reservation",
                        "type": "string"
                    },
                    "patient": {
                        "$ref": "#/components/schemas/PatientResource"
                    },
                    "doctor": {
                        "$ref": "#/components/schemas/DoctorResource"
                    },
                    "specification": {
                        "$ref": "#/components/schemas/SpecificationResource"
                    },
                    "createdAt": {
                        "description": "Creation timestamp of the reservation",
                        "type": "string",
                        "format": "date-time"
                    },
                    "pastReservationsCount": {
                        "description": "Count of past reservations",
                        "type": "integer"
                    },
                    "upComingReservationCount": {
                        "description": "Count of upcoming reservations",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SpecificationResource": {
                "title": "SpecificationResource",
                "description": "Specification resource representation",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the specification",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Name of the specification",
                        "type": "string",
                        "example": "Specification Name"
                    },
                    "description": {
                        "description": "Description of the specification",
                        "type": "string",
                        "example": "This is a detailed description of the specification."
                    },
                    "image": {
                        "$ref": "#/components/schemas/MediaResource"
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "title": "UserResource",
                "description": "User resource representation",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the user",
                        "type": "integer",
                        "example": 1
                    },
                    "fullName": {
                        "description": "Full name of the user",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "description": "Email address of the user",
                        "type": "string",
                        "example": "john.doe@example.com"
                    },
                    "username": {
                        "description": "Username of the user",
                        "type": "string",
                        "example": "johndoe"
                    },
                    "avatar": {
                        "$ref": "#/components/schemas/MediaResource"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "File Manager",
            "description": "API Endpoints for file management operations"
        },
        {
            "name": "Overview",
            "description": "API Endpoints for dashboard overview statistics"
        },
        {
            "name": "Records",
            "description": "API Endpoints for managing medical records"
        },
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Patients",
            "description": "Patients"
        },
        {
            "name": "Reservation",
            "description": "Reservation"
        }
    ]
}